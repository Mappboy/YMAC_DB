# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-06-13 04:39
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CaptureOrg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_name', models.TextField()),
                ('organisation_contact',
                 models.CharField(blank=True, help_text='Main Contact Name', max_length=100, null=True)),
                ('organisation_email',
                 models.EmailField(blank=True, help_text='Main Contact Email', max_length=254, null=True)),
                ('organisation_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('organisation_address', models.TextField(blank=True, null=True)),
                ('organisation_suburb', models.TextField(blank=True, null=True)),
                ('organisation_state', models.CharField(blank=True,
                                                        choices=[('WA', 'WA'), ('NSW', 'NSW'), ('ACT', 'ACT'),
                                                                 ('SA', 'SA'), ('QLD', 'QLD'), ('TAS', 'TAS'),
                                                                 ('VIC', 'VIC'), ('NT', 'NT')], max_length=3,
                                                        null=True)),
                ('organisation_postcode', models.IntegerField(blank=True, null=True)),
                ('organisation_website', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ymac_db_captureorg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
                ('employee', models.NullBooleanField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DaaSite',
            fields=[
                ('objectid', models.AutoField(max_length=200, primary_key=True, serialize=False)),
                ('place_id', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('legacy_id', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('status_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('origin_place_id', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('region', models.CharField(blank=True, max_length=200, null=True)),
                ('restrictions', models.CharField(blank=True, max_length=200, null=True)),
                ('file_restricted', models.CharField(blank=True, max_length=200, null=True)),
                ('location_restricted', models.CharField(blank=True, max_length=200, null=True)),
                ('boundary_reliable', models.CharField(blank=True, max_length=200, null=True)),
                ('protected_area', models.CharField(blank=True, max_length=200, null=True)),
                ('protected_area_gazetted_date', models.CharField(blank=True, max_length=200, null=True)),
                ('national_estate_area', models.CharField(blank=True, max_length=200, null=True)),
                ('duplicate_id', models.CharField(blank=True, max_length=200, null=True)),
                ('boundary_last_update_date', models.CharField(blank=True, max_length=200, null=True)),
                ('shape_length', models.CharField(blank=True, max_length=200, null=True)),
                ('shape_area', models.CharField(blank=True, max_length=200, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4283)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'daa_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataSuppliers',
            fields=[
                ('supplier', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'data_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalClientSite',
            fields=[
                ('external_id', models.AutoField(primary_key=True, serialize=False)),
                ('external_site_id', models.TextField(blank=True, null=True)),
                ('site_name', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4283)),
            ],
            options={
                'db_table': 'external_client_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HeritageCompanies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_code', models.IntegerField(unique=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HeritageSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundary_description', models.CharField(blank=True,
                                                          choices=[('Complete Accurate', 'Complete Accurate'),
                                                                   ('Incomplete Accurate', 'Incomplete Accurate'),
                                                                   ('Complete Inferred', 'Complete Inferred'),
                                                                   ('Incomplete Inferred', 'Incomplete Inferred'),
                                                                   ('Unknown', 'Unknown')], max_length=30, null=True)),
                ('disturbance_level', models.CharField(blank=True,
                                                       choices=[('Negligible', 'Negligible'), ('Minimal', 'Minimal'),
                                                                ('Moderate', 'Moderate'),
                                                                ('Significant', 'Significant'), ('Major', 'Major')],
                                                       max_length=30, null=True)),
                ('status', models.CharField(blank=True, choices=[('Protected', 'Protected'), ('Cleared', 'Cleared'),
                                                                 ('Restricted', 'Restricted'),
                                                                 ('Provisional', 'Provisional'),
                                                                 ('Stored Data', 'Stored Data')], max_length=15,
                                            null=True)),
                ('site_comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heritage_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HeritageSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.TextField(blank=True, help_text='Internal or Survey Project Name')),
                ('project_status', models.CharField(blank=True,
                                                    choices=[('On Hold', 'On Hold'), ('In Progress', 'In Progress'),
                                                             ('Date Set', 'Date Set'),
                                                             ('Proposed Date', 'Proposed Date'),
                                                             ('Cancelled', 'Cancelled'), ('Completed', 'Completed'),
                                                             ('Postponed', 'Postponed'),
                                                             ('Heritage Notice Recd', 'Heritage Notice Recd'),
                                                             ('PA Received', 'PA Received'),
                                                             ('PA Sent to Proponent', 'PA Sent to Proponent'),
                                                             ('Draft Report Received', 'Draft Report Received'),
                                                             ('Final Report Received', 'Final Report Received'),
                                                             ('Field Work Completed', 'Field Work Completed')],
                                                    max_length=25, null=True)),
                ('survey_region',
                 models.CharField(blank=True, choices=[('Pilbara', 'Pilbara'), ('Yamatji', 'Yamatji')], max_length=15,
                                  null=True)),
                ('survey_description',
                 models.TextField(blank=True, help_text='Description of the proposed or actual survey')),
                ('survey_note', models.TextField(blank=True, help_text='Additional Survey notes')),
                ('date_create', models.DateField(blank=True, null=True)),
                ('date_mod', models.DateField(blank=True, null=True)),
                ('data_qa', models.BooleanField(help_text='Has Actual data been checked by Spatial Team')),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, srid=4283)),
            ],
            options={
                'ordering': ('date_create',),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HeritageSurveyTrip',
            fields=[
                ('survey_trip_id', models.AutoField(primary_key=True, serialize=False)),
                ('survey_id', models.CharField(max_length=10)),
                ('original_ymac_id', models.CharField(blank=True, max_length=50, null=True)),
                ('trip_number', models.SmallIntegerField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NnttDetermination',
            fields=[
                ('tribid', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('fcno', models.CharField(blank=True, max_length=254, null=True)),
                ('fcname', models.CharField(blank=True, max_length=250, null=True)),
                ('detbody', models.CharField(blank=True, max_length=100, null=True)),
                ('detdate', models.DateField(blank=True, null=True)),
                ('detregdate', models.DateField(blank=True, null=True)),
                ('detmethod', models.CharField(blank=True, max_length=100, null=True)),
                ('dettype', models.CharField(blank=True, max_length=100, null=True)),
                ('detoutcome', models.CharField(blank=True, max_length=70, null=True)),
                ('appealdesc', models.CharField(blank=True, max_length=40, null=True)),
                ('judge', models.CharField(blank=True, max_length=254, null=True)),
                ('rntbcname', models.CharField(blank=True, max_length=254, null=True)),
                ('nthold', models.CharField(blank=True, max_length=254, null=True)),
                ('relntda', models.CharField(blank=True, max_length=200, null=True)),
                ('detinfull', models.CharField(blank=True, max_length=1, null=True)),
                ('areasqkm', models.FloatField(blank=True, null=True)),
                ('datasource', models.CharField(blank=True, max_length=60, null=True)),
                ('datecurr', models.DateField(blank=True, null=True)),
                ('seadet', models.CharField(blank=True, max_length=1, null=True)),
                ('zonelwm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone3nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone12nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone24nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zoneeez', models.CharField(blank=True, max_length=1, null=True)),
                ('nnttseqno', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('objectind', models.CharField(blank=True, max_length=1, null=True)),
                ('sptialnote', models.CharField(blank=True, max_length=120, null=True)),
                ('link', models.CharField(blank=True, max_length=254, null=True)),
                ('juris', models.CharField(blank=True, max_length=10, null=True)),
                ('overlap', models.CharField(blank=True, max_length=20, null=True)),
                ('tribno', models.CharField(blank=True, max_length=20, null=True)),
                ('anthro', models.CharField(blank=True, max_length=200, null=True)),
                ('claimgroup', models.CharField(blank=True, max_length=200, null=True)),
                ('lawyer', models.CharField(blank=True, max_length=200, null=True)),
                ('ymacregion', models.CharField(blank=True, max_length=200, null=True)),
                ('hs_officer', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'nntt_determinations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proponent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('prop_id', models.CharField(max_length=10)),
                ('name', models.TextField()),
                ('contact', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelatedSurveyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rel_survey_id', models.CharField(max_length=10)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchSite',
            fields=[
                ('research_site_id', models.AutoField(primary_key=True, serialize=False)),
                ('site_classification', models.CharField(blank=True, choices=[('Ethnographic', 'Ethnographic'),
                                                                              ('Archeological', 'Archeological'),
                                                                              ('Arch & Ethno', 'Arch & Ethno')],
                                                         max_length=30, null=True)),
                ('site_category', models.CharField(blank=True, choices=[('GEOGRAPHIC FEATURES', 'GEOGRAPHIC FEATURES'),
                                                                        ('RESTRICTED OR CEREMONIAL SITE',
                                                                         'RESTRICTED OR CEREMONIAL SITE'),
                                                                        ('CAMPS/ LIVING AREAS', 'CAMPS/ LIVING AREAS')],
                                                   max_length=30, null=True)),
                ('site_location', models.CharField(blank=True, choices=[('Located', 'Located'),
                                                                        ('Position Indicative', 'Position Indicative'),
                                                                        ('Approximate', 'Approximate'),
                                                                        ('Unknown', 'Unknown')], max_length=30,
                                                   null=True)),
                ('site_comments', models.TextField(blank=True, null=True)),
                ('ethno_detail', models.TextField(blank=True, null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('site_name', models.TextField(blank=True, null=True)),
                ('site_label', models.TextField(blank=True, null=True)),
                ('alt_site_name', models.TextField(blank=True, null=True)),
                ('site_number', models.IntegerField(blank=True, null=True)),
                ('family_affiliation', models.TextField(blank=True, null=True)),
                ('mapsheet', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'research_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictionStatus',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=12,
                                            null=True)),
                ('claim', models.NullBooleanField()),
            ],
            options={
                'db_table': 'restriction_status',
                'managed': False,
                'verbose_name_plural': 'Restriction Status',
            },
        ),
        migrations.CreateModel(
            name='SampleMethodology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampling_meth', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'sample_methodology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamplingConfidence',
            fields=[
                ('sampling_conf', models.CharField(max_length=30)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'sampling_confidence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('site_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_recorded', models.DateField(blank=True, null=True)),
                ('group_name',
                 models.TextField(blank=True, help_text='Is this site part of a group of sites or complex?',
                                  null=True)),
                ('site_identifier',
                 models.CharField(blank=True, help_text='Site name to help you identify it', max_length=200,
                                  null=True)),
                ('label_x_ll', models.FloatField(blank=True, null=True)),
                ('label_y_ll', models.FloatField(blank=True, null=True)),
                ('date_created', models.DateField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('capture_coord_sys', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4283)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_description', models.CharField(
                    choices=[('Artefacts / Scatter', 'Artefacts / Scatter'), ('Birthplace', 'Birthplace'),
                             ('Ceremonial', 'Ceremonial'), ('Engravings', 'Engravings'),
                             ('Grinding Patch', 'Grinding Patch'), ('Gnamma Hole', 'Gnamma Hole'),
                             ('Mythological', 'Mythological')], max_length=60)),
            ],
            options={
                'db_table': 'ymac_db_sitedescriptions',
                'managed': False,
                'verbose_name_plural': 'Site Descriptions',
            },
        ),
        migrations.CreateModel(
            name='SiteDocument',
            fields=[
                ('doc_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_type', models.CharField(
                    choices=[('Image', 'Image'), ('Audio', 'Audio'), ('Video', 'Video'), ('Document', 'Document'),
                             ('Map', 'Map'), ('Other', 'Other')], max_length=15)),
                ('filepath', models.CharField(blank=True, max_length=255, null=True)),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'site_documents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=70, null=True)),
                ('employee', models.NullBooleanField()),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('user_name',),
                'db_table': 'ymac_db_siteuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyCleaning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleaning_comment', models.TextField()),
                ('data_path', models.TextField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=35)),
                ('group_id', models.CharField(max_length=3)),
                ('determined', models.BooleanField()),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, srid=4283)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyMethodology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_meth', models.CharField(max_length=40)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyProponentCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heritage_svy_id', models.IntegerField()),
                ('proponent_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyStatus',
            fields=[
                ('survey_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=8, null=True, unique=True)),
            ],
            options={
                'db_table': 'survey_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.CharField(max_length=4, unique=True)),
                ('description', models.CharField(blank=True, max_length=25, null=True, unique=True)),
            ],
            options={
                'db_table': 'survey_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tenement',
            fields=[
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('survstatus', models.CharField(blank=True, max_length=15, null=True)),
                ('tenstatus', models.CharField(blank=True, max_length=10, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('starttime', models.CharField(blank=True, max_length=8, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('endtime', models.CharField(blank=True, max_length=8, null=True)),
                ('grantdate', models.DateField(blank=True, null=True)),
                ('granttime', models.CharField(blank=True, max_length=8, null=True)),
                ('fmt_tenid', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('legal_area', models.DecimalField(blank=True, decimal_places=15, max_digits=31, null=True)),
                ('special_in', models.CharField(blank=True, max_length=1, null=True)),
                ('extract_da', models.DateField(blank=True, null=True)),
                ('combined_r', models.CharField(blank=True, max_length=10, null=True)),
                ('all_holder', models.CharField(blank=True, max_length=254, null=True)),
                ('tribid', models.CharField(blank=True, max_length=200, null=True)),
                ('claim_groups', models.CharField(blank=True, max_length=200, null=True)),
                ('ymac_region', models.NullBooleanField()),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4283)),
            ],
            options={
                'db_table': 'tenement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YmacClaim',
            fields=[
                ('tribid', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(blank=True, max_length=102, null=True)),
                ('fcno', models.CharField(blank=True, max_length=20, null=True)),
                ('datelodged', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=30, null=True)),
                ('datestatus', models.DateField(blank=True, null=True)),
                ('rtstatus', models.CharField(blank=True, max_length=40, null=True)),
                ('datertdec', models.DateField(blank=True, null=True)),
                ('datereg', models.DateField(blank=True, null=True)),
                ('datentri', models.DateField(blank=True, null=True)),
                ('datenotncl', models.DateField(blank=True, null=True)),
                ('datefcord', models.DateField(blank=True, null=True)),
                ('combined', models.CharField(blank=True, max_length=1, null=True)),
                ('parentno', models.CharField(blank=True, max_length=12, null=True)),
                ('rep', models.CharField(blank=True, max_length=102, null=True)),
                ('casemgr', models.CharField(blank=True, max_length=25, null=True)),
                ('member', models.CharField(blank=True, max_length=254, null=True)),
                ('appltype', models.CharField(blank=True, max_length=50, null=True)),
                ('areasqkm', models.FloatField(blank=True, null=True)),
                ('datasource', models.CharField(blank=True, max_length=60, null=True)),
                ('datecurr', models.DateField(blank=True, null=True)),
                ('seaclaim', models.CharField(blank=True, max_length=1, null=True)),
                ('zonelwm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone3nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone12nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zone24nm', models.CharField(blank=True, max_length=1, null=True)),
                ('zoneeez', models.CharField(blank=True, max_length=1, null=True)),
                ('nnttseqno', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('objectind', models.CharField(blank=True, max_length=1, null=True)),
                ('sptialnote', models.CharField(blank=True, max_length=120, null=True)),
                ('juris', models.CharField(blank=True, max_length=10, null=True)),
                ('overlap', models.CharField(blank=True, max_length=20, null=True)),
                ('tribno', models.CharField(blank=True, max_length=10, null=True)),
                ('ymacregion', models.CharField(blank=True, max_length=200, null=True)),
                ('claimgroup', models.CharField(blank=True, max_length=200, null=True)),
                ('anthro', models.CharField(blank=True, max_length=200, null=True)),
                ('lawyer', models.CharField(blank=True, max_length=200, null=True)),
                ('hs_officer', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('claim_group_id', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ymac_claims',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YmacHeritageStaging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(blank=True, max_length=7, null=True)),
                ('survey_trip_id', models.IntegerField()),
                ('survey_id', models.CharField(blank=True, max_length=60, null=True)),
                ('trip_number', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('claimgroup', models.TextField(blank=True, null=True)),
                ('survey_type', models.CharField(blank=True, max_length=25, null=True)),
                ('sampling_meth', models.CharField(blank=True, max_length=20, null=True)),
                ('sampling_conf', models.CharField(blank=True, max_length=60, null=True)),
                ('ymac_svy_name', models.CharField(blank=True, max_length=200, null=True)),
                ('survey_name', models.CharField(blank=True, max_length=200, null=True)),
                ('date_create', models.DateField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('date_mod', models.DateField(blank=True, null=True)),
                ('mod_by', models.CharField(blank=True, max_length=50, null=True)),
                ('propref', models.CharField(blank=True, max_length=200, null=True)),
                ('data_supplier', models.CharField(blank=True, max_length=50, null=True)),
                ('data_qa', models.TextField(blank=True, null=True)),
                ('collected_by', models.CharField(blank=True, max_length=60, null=True)),
                ('rio_area_codes', models.TextField(blank=True, null=True)),
                ('survey_methodology', models.TextField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('modified_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'ymac_heritage_staging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YmacRegion',
            fields=[
                ('org', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('gazetted', models.DateField(blank=True, null=True)),
                ('effective', models.DateField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=120, null=True)),
                ('juris', models.CharField(blank=True, max_length=20, null=True)),
                ('id', models.FloatField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'YMAC_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YmacStaff',
            fields=[
                ('username', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=70, null=True)),
                ('full_name', models.CharField(blank=True, max_length=70, null=True)),
                ('last_name', models.CharField(blank=True, max_length=40, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'ymac_staff',
                'managed': False,
            },
        ),
    ]
